Date:27/11/21
Promise
Promises are way to acheive asynchronous operation in js.

States:
1.Pending:
It is a initial STate or promise
2.fullfilled=>Operation have successfully executed
3.Rejected:=>Operation is rejected

Creation of promises:
new 
resolve reject

Promise constructor:
const promise=new Promise(function(resolve,reject){
//promise logic 


//Callback
// The first parameter=>error
// second parameter=>Result
const doSomething = (callback) => {
  setTimeout(() => {
    const data = ["Apple", "Mangoes", "Grapes", "papaya", "Orange"];
    callback(false, data);
  }, 3000);
};

const callback = (err, data) => {
  if (err) {
    return console.log(err);
  }
  return console.log(data);
};

doSomething(callback);



}






let PromiseTOCleanroom = new Promise(function (resolve, reject) {
  let islceanroom = false;
  if (islceanroom) {
    resolve("Cleaned!");
  } else {
    reject("Not cleaned!");
  }
});

console.log(PromiseTOCleanroom);

PromiseTOCleanroom.then(function (fromresolved) {
  console.log("Room is " + fromresolved);
}).catch(function (fromrejected) {
  console.log("Room is  " + fromrejected);
});







const value = 2;

//create a promise object
const promiseobj = new Promise((resolve, reject) => {
  //Generate random number generator for
  const random = Math.floor(Math.random() * 10);
  console.log(random);
  if (random === value) {
    resolve("You Have Guessed Number Correctly");
  } else {
    reject("You Have Guessed Number Incorrectly");
  }
});

console.log(promiseobj);

promiseobj
  .then((message) => {
    console.log(message);
  })
  .catch((error) => {
    console.log(error);
  });
